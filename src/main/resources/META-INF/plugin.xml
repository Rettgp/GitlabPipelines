<idea-plugin>
    <id>org.rett.gitlab.pipelines</id>
    <name>GitLab Pipelines</name>
    <vendor email="garrphelps@gmail.com">Garrett Phelps</vendor>
    <version>1.0.1</version>

    <description><![CDATA[
    Monitor your GitLab CI pipelines in IntelliJ<br/>
    <br>
    <ul>
        <li>Display gitlab pipeline statuses for currently checked out branches</li>
        <li>Show notifications for new statuses</li>
        <li>Open or create merge requests in your browser</li>
    </ul>

    ]]></description>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.vcs</depends>
    <depends>Git4Idea</depends>

    <idea-version since-build="203.4203.26"/>

    <extensions defaultExtensionNs="com.intellij">
        <toolWindow id="Gitlab pipeline viewer" secondary="true" icon="/toolWindow/gitlab-icon.png" anchor="bottom" factoryClass="org.rett.gitlab.pipelines.ui.GitlabToolWindowFactory"/>

        <projectConfigurable instance="org.rett.gitlab.pipelines.config.GitlabProjectConfigurable" id="org.rett.gitlab.pipelines.configurable" displayName="GitLab Pipeline Viewer"/>
        <applicationConfigurable instance="org.rett.gitlab.pipelines.config.GitlabApplicationConfigurable" id="org.rett.gitlab.pipelines.appConfigurable" displayName="GitLab Pipeline Viewer"/>
        <applicationService serviceImplementation="org.rett.gitlab.pipelines.config.PipelineViewerConfigApp"/>
        <projectService serviceImplementation="org.rett.gitlab.pipelines.config.PipelineViewerConfigProject"/>
        <applicationService serviceImplementation="org.rett.gitlab.pipelines.update.UpdateNotificationPersistance"/>
        <applicationService serviceImplementation="org.rett.gitlab.pipelines.config.ConfigProvider"/>
        <projectService serviceImplementation="org.rett.gitlab.pipelines.lights.LightsLinux"/>
        <projectService serviceImplementation="org.rett.gitlab.pipelines.lights.LightsWindows"/>
        <projectService serviceImplementation="org.rett.gitlab.pipelines.lights.LightsControl"/>
        <projectService serviceImplementation="org.rett.gitlab.pipelines.PipelineFilter"/>
        <projectService serviceImplementation="org.rett.gitlab.pipelines.git.GitService"/>
        <projectService serviceImplementation="org.rett.gitlab.pipelines.gitlab.GitlabService"/>
        <projectService serviceImplementation="org.rett.gitlab.pipelines.notifier.NotifierService"/>
        <!-- Define after NotifierService so events are only fired when it has already registered       -->
        <projectService serviceImplementation="org.rett.gitlab.pipelines.BackgroundUpdateService"/>
        <postStartupActivity implementation="org.rett.gitlab.pipelines.StartupInitialization"/>
        <postStartupActivity implementation="org.rett.gitlab.pipelines.update.AfterUpdateNotifier"/>
        <notificationGroup displayType="TOOL_WINDOW" id="org.rett.gitlab.pipelines.unmappedRemote" key="org.rett.gitlab.pipelines.unmappedRemote" bundle="gitlabBranchViewer"/>
        <notificationGroup displayType="STICKY_BALLOON" id="org.rett.gitlab.pipelines.disabledCi" key="org.rett.gitlab.pipelines.disabledCi" bundle="gitlabBranchViewer"/>
        <notificationGroup displayType="STICKY_BALLOON" id="org.rett.gitlab.pipelines.genericNotificationGroup" key="org.rett.gitlab.pipelines.error" bundle="gitlabBranchViewer"/>
        <notificationGroup displayType="BALLOON" id="org.rett.gitlab.pipelines.pipelineStatus.pending" icon="/toolWindow/gitlab-icon.png" key="org.rett.gitlab.pipelines.pipelineStatus.pending" bundle="gitlabBranchViewer"
                           isLogByDefault="false"/>
        <notificationGroup displayType="BALLOON" id="org.rett.gitlab.pipelines.pipelineStatus.running" icon="/toolWindow/gitlab-icon.png" key="org.rett.gitlab.pipelines.pipelineStatus.running" bundle="gitlabBranchViewer"
                           isLogByDefault="false"/>
        <notificationGroup displayType="BALLOON" id="org.rett.gitlab.pipelines.pipelineStatus.canceled" icon="/toolWindow/gitlab-icon.png" key="org.rett.gitlab.pipelines.pipelineStatus.canceled" bundle="gitlabBranchViewer"
                           isLogByDefault="false"/>
        <notificationGroup displayType="BALLOON" id="org.rett.gitlab.pipelines.pipelineStatus.failed" icon="/toolWindow/gitlab-icon.png" key="org.rett.gitlab.pipelines.pipelineStatus.failed" bundle="gitlabBranchViewer"/>
        <notificationGroup displayType="BALLOON" id="org.rett.gitlab.pipelines.pipelineStatus.success" icon="/toolWindow/gitlab-icon.png" key="org.rett.gitlab.pipelines.pipelineStatus.success" bundle="gitlabBranchViewer"/>
        <notificationGroup displayType="BALLOON" id="org.rett.gitlab.pipelines.pipelineStatus.skipped" icon="/toolWindow/gitlab-icon.png" key="org.rett.gitlab.pipelines.pipelineStatus.skipped" bundle="gitlabBranchViewer"
                           isLogByDefault="false"/>
        <notificationGroup displayType="BALLOON" id="org.rett.gitlab.pipelines.pipelineStatus.other" icon="/toolWindow/gitlab-icon.png" key="org.rett.gitlab.pipelines.pipelineStatus.other" bundle="gitlabBranchViewer"
                           isLogByDefault="false"/>
    </extensions>

    <actions>
        <action id="org.rett.gitlab.pipelines.OpenLastPipelineAction" class="org.rett.gitlab.pipelines.OpenLastPipelineAction" text="Open Last Pipeline"
                description="Opens the last pipeline in the browser (like clicking its URL in the tool window)">
            <add-to-group group-id="VcsGroups" anchor="last"/>
        </action>
        <action id="org.rett.gitlab.pipelines.debug.ShowTestNotificationAction" class="org.rett.gitlab.pipelines.debug.ShowTestNotificationAction" text="Show gitlab test notification">
            <add-to-group group-id="ToolsMenu" anchor="first"/>
        </action>
    </actions>


</idea-plugin>
